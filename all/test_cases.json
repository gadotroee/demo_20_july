{
 "10": "  @json_dataset('data/test_10_get_param.json')\n  @clear_session({'spanId': 10})\n  def test_10_get_param(self, data_row):\n    order, param, = data_row\n\n    # endpoint 10\n    qstr = '?' + urlencode([('order', order)])\n    sockshop_haiut_dev_spyd_io = get_http_target('TARGET_SOCKSHOP_HAIUT_DEV_SPYD_IO', authenticate)\n    resp = sockshop_haiut_dev_spyd_io.get(f'/{param}' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n    resp.assert_cssselect('div#top div.container div.offer a.btn.btn-success.btn-sm', expected_value='Offer of the day')\n\n",
 "1": "  @clear_session({'spanId': 1})\n  def test_1_get_address(self):\n    # endpoint 2\n    sockshop_haiut_dev_spyd_io = get_http_target('TARGET_SOCKSHOP_HAIUT_DEV_SPYD_IO', authenticate)\n    resp = sockshop_haiut_dev_spyd_io.get('/card', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n\n    # endpoint 1\n    resp = sockshop_haiut_dev_spyd_io.get('/address', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n    resp.assert_jsonpath('$.city', expected_value='Kfar Saba')\n\n",
 "3": "  @json_dataset('data/test_3_get_cart.json')\n  @clear_session({'spanId': 3})\n  def test_3_get_cart(self, data_row):\n    customerId, size, = data_row\n\n    # endpoint 11\n    sockshop_haiut_dev_spyd_io = get_http_target('TARGET_SOCKSHOP_HAIUT_DEV_SPYD_IO', authenticate)\n    resp = sockshop_haiut_dev_spyd_io.get(f'/customers/{customerId}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n    resp.assert_jsonpath('$.username', expected_value='alex01')\n\n    # endpoint 9\n    qstr = '?' + urlencode([('page', '1'), ('size', size), ('tags', '')])\n    resp = sockshop_haiut_dev_spyd_io.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n    _id = jsonpath('$.[*].id', resp)\n\n    # endpoint 7\n    resp = sockshop_haiut_dev_spyd_io.get(f'/catalogue/{_id}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n\n    # endpoint 3\n    resp = sockshop_haiut_dev_spyd_io.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n\n",
 "8": "  @clear_session({'spanId': 8})\n  def test_8_get_catalogue_size(self):\n    # endpoint 8\n    qstr = '?' + urlencode([('tags', '')])\n    sockshop_haiut_dev_spyd_io = get_http_target('TARGET_SOCKSHOP_HAIUT_DEV_SPYD_IO', authenticate)\n    resp = sockshop_haiut_dev_spyd_io.get('/catalogue/size' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n\n",
 "14": "  # authentication-related test\n  @clear_session({'spanId': 14})\n  def test_14_get_login(self):\n    # endpoint 14\n    sockshop_haiut_dev_spyd_io = get_http_target('TARGET_SOCKSHOP_HAIUT_DEV_SPYD_IO', dummy_auth)\n    resp = sockshop_haiut_dev_spyd_io.get('/login', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n    resp.assert_cssselect('p', expected_value='Cookie is set')\n\n",
 "18": "  @json_dataset('data/test_18_get_orders_orderId.json')\n  @clear_session({'spanId': 18})\n  def test_18_get_orders_orderId(self, data_row):\n    orderId, = data_row\n\n    # endpoint 18\n    sockshop_haiut_dev_spyd_io = get_http_target('TARGET_SOCKSHOP_HAIUT_DEV_SPYD_IO', authenticate)\n    resp = sockshop_haiut_dev_spyd_io.get(f'/orders/{orderId}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n    resp.assert_jsonpath('$.address.city', expected_value='Kfar Saba')\n\n",
 "19": "  @json_dataset('data/test_19_get_tags.json')\n  @clear_session({'spanId': 19})\n  def test_19_get_tags(self, data_row):\n    customerId, size, = data_row\n\n    # endpoint 11\n    sockshop_haiut_dev_spyd_io = get_http_target('TARGET_SOCKSHOP_HAIUT_DEV_SPYD_IO', authenticate)\n    resp = sockshop_haiut_dev_spyd_io.get(f'/customers/{customerId}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n    resp.assert_jsonpath('$.username', expected_value='alex01')\n\n    # endpoint 9\n    qstr = '?' + urlencode([('page', '1'), ('size', size), ('tags', '')])\n    resp = sockshop_haiut_dev_spyd_io.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n\n    # endpoint 19\n    resp = sockshop_haiut_dev_spyd_io.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n    resp.assert_status_code(200)\n\n"
}